#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log /dev/log local0
    log /dev/log local1 notice
    daemon

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           20s
    timeout connect         10s
    timeout client          90s
    timeout server          90s
    timeout http-keep-alive 10s
    timeout check           10s

#---------------------------------------------------------------------
# haproxy frontend for Prometheus metrics
#---------------------------------------------------------------------

frontend stats
   bind *:8404
   http-request use-service prometheus-exporter if { path /metrics }
   stats enable
   stats uri /stats
   stats refresh 10s

#---------------------------------------------------------------------
# haproxy frontend which is a proxy to multiple backends
#---------------------------------------------------------------------
frontend haproxy_services_frontend
    bind *:80
    bind *:443
    mode http
    option httplog

    acl host_hass hdr(host) -i hass.tnwks.local
    acl host_biris hdr(host) -i blueiris.tnwks.local
    acl host_obsidian-couchdb hdr(host) -i obsidian-couchdb.tnwks.local
    acl host_jellyfin hdr(host) -i jellyfin.tnwks.local

    use_backend k8s_ingress_backend if host_hass
    use_backend k8s_ingress_backend if host_obsidian-couchdb
    use_backend blue_iris_backend if host_biris
    use_backend k8s_ingress_backend if host_jellyfin

#---------------------------------------------------------------------
# backend for blue iris
#---------------------------------------------------------------------
backend blue_iris_backend
    mode http
    server sce-biris01 10.10.60.210:81 check
    option httpchk GET /login.htm?page=%2F
    http-check expect status 200
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }

#---------------------------------------------------------------------
# backend for k8s_ingress
#---------------------------------------------------------------------
backend k8s_ingress_backend
    mode http
    server sce-k8s 10.10.120.52:80 check    
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
